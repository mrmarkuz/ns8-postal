#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

#This is specific to you module, so you need to change it accordingly.
#agent.dump_env()
MARIADB_DATABASE = data.get("MARIADB_DATABASE", "postal") 
MARIADB_ALLOW_EMPTY_PASSWORD = data.get("MARIADB_ALLOW_EMPTY_PASSWORD", "yes") 
MARIADB_ALLOW_EMPTY_ROOT_PASSWORD = data.get("MARIADB_ALLOW_EMPTY_ROOT_PASSWORD", "yes") 
 
mariadb = { 
 "MARIADB_DATABASE" : MARIADB_DATABASE ,
 "MARIADB_ALLOW_EMPTY_PASSWORD" : MARIADB_ALLOW_EMPTY_PASSWORD ,
 "MARIADB_ALLOW_EMPTY_ROOT_PASSWORD" : MARIADB_ALLOW_EMPTY_ROOT_PASSWORD ,
} 
agent.write_envfile("mariadb.env", mariadb) 
POSTAL_SIGNING_KEY_PATH = data.get("POSTAL_SIGNING_KEY_PATH", "/config/signing.key") 
MESSAGE_DB_HOST = data.get("MESSAGE_DB_HOST", "mariadb") 
WAIT_FOR_TIMEOUT = data.get("WAIT_FOR_TIMEOUT", "90") 
WAIT_FOR_TARGETS = data.get("WAIT_FOR_TARGETS", "mariadb:3306") 
MAIN_DB_HOST = data.get("MAIN_DB_HOST", "mariadb") 
MAIN_DB_USERNAME = data.get("MAIN_DB_USERNAME", "root") 
MESSAGE_DB_USERNAME = data.get("MESSAGE_DB_USERNAME", "root") 
LOGGING_ENABLED = data.get("LOGGING_ENABLED", "false") 
RAILS_ENVIRONMENT = data.get("RAILS_ENVIRONMENT", "test") 
RAILS_LOG_ENABLED = data.get("RAILS_LOG_ENABLED", "false") 
 
postal = { 
 "POSTAL_SIGNING_KEY_PATH" : POSTAL_SIGNING_KEY_PATH ,
 "MESSAGE_DB_HOST" : MESSAGE_DB_HOST ,
 "WAIT_FOR_TIMEOUT" : WAIT_FOR_TIMEOUT ,
 "WAIT_FOR_TARGETS" : WAIT_FOR_TARGETS ,
 "MAIN_DB_HOST" : MAIN_DB_HOST ,
 "MAIN_DB_USERNAME" : MAIN_DB_USERNAME ,
 "MESSAGE_DB_USERNAME" : MESSAGE_DB_USERNAME ,
 "LOGGING_ENABLED" : LOGGING_ENABLED ,
 "RAILS_ENVIRONMENT" : RAILS_ENVIRONMENT ,
 "RAILS_LOG_ENABLED" : RAILS_LOG_ENABLED ,
} 
agent.write_envfile("postal.env", postal) 
