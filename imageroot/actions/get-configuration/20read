#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Read configuration
#

import os
import sys
import json
import agent

# Prepare return variable
config = {}

# Read current configuration from the environment file
config["host"] = os.getenv("TRAEFIK_HOST","")
config["http2https"] = os.getenv("TRAEFIK_HTTP2HTTPS") == "True"
config["lets_encrypt"] = os.getenv("TRAEFIK_LETS_ENCRYPT") == "True"

# Dump the configuration to stdout
# json.dump(config, fp=sys.stdout)
if os.path.exists("mariadb.env"): 
	data = agent.read_envfile("mariadb.env") 
	config["MARIADB_DATABASE"] = data.get("MARIADB_DATABASE", "postal") 
	config["MARIADB_ALLOW_EMPTY_PASSWORD"] = data.get("MARIADB_ALLOW_EMPTY_PASSWORD", "yes") 
	config["MARIADB_ALLOW_EMPTY_ROOT_PASSWORD"] = data.get("MARIADB_ALLOW_EMPTY_ROOT_PASSWORD", "yes") 
else: 
	config["MARIADB_DATABASE"] = "postal" 
	config["MARIADB_ALLOW_EMPTY_PASSWORD"] = "yes" 
	config["MARIADB_ALLOW_EMPTY_ROOT_PASSWORD"] = "yes" 
 
if os.path.exists("postal.env"): 
	data = agent.read_envfile("postal.env") 
	config["MAIN_DB_HOST"] = data.get("MAIN_DB_HOST", "mariadb") 
	config["MAIN_DB_USERNAME"] = data.get("MAIN_DB_USERNAME", "root") 
	config["MESSAGE_DB_USERNAME"] = data.get("MESSAGE_DB_USERNAME", "root") 
	config["LOGGING_ENABLED"] = data.get("LOGGING_ENABLED", "false") 
	config["RAILS_ENVIRONMENT"] = data.get("RAILS_ENVIRONMENT", "test") 
	config["RAILS_LOG_ENABLED"] = data.get("RAILS_LOG_ENABLED", "false") 
	config["POSTAL_SIGNING_KEY_PATH"] = data.get("POSTAL_SIGNING_KEY_PATH", "/config/signing.key") 
	config["MESSAGE_DB_HOST"] = data.get("MESSAGE_DB_HOST", "mariadb") 
	config["WAIT_FOR_TIMEOUT"] = data.get("WAIT_FOR_TIMEOUT", "90") 
	config["WAIT_FOR_TARGETS"] = data.get("WAIT_FOR_TARGETS", "mariadb:3306") 
else: 
	config["WAIT_FOR_TARGETS"] = "mariadb:3306" 
	config["MAIN_DB_HOST"] = "mariadb" 
	config["MAIN_DB_USERNAME"] = "root" 
	config["MESSAGE_DB_USERNAME"] = "root" 
	config["LOGGING_ENABLED"] = "false" 
	config["RAILS_ENVIRONMENT"] = "test" 
	config["RAILS_LOG_ENABLED"] = "false" 
	config["POSTAL_SIGNING_KEY_PATH"] = "/config/signing.key" 
	config["MESSAGE_DB_HOST"] = "mariadb" 
	config["WAIT_FOR_TIMEOUT"] = "90" 
 
json.dump(config, fp=sys.stdout)
